{"ast":null,"code":"import _classCallCheck from \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/src/components/ChatRoom.js\";\nimport React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ChatItem from \"./ChatItem\";\nimport NameModal from \"./NameModal\";\nimport UsersPopper from \"./UsersPopper\";\nimport faker from \"faker\";\n\nvar styles = function styles() {\n  return {\n    div_center: {\n      margin: \"0px\",\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      width: \"404px\",\n      height: \"100%\",\n      minHeight: \"100%\",\n      backgroundColor: \"red\"\n    },\n    list: {\n      width: \"100%\",\n      maxWidth: 400,\n      backgroundColor: \"grey\",\n      position: \"relative\",\n      overflow: \"auto\",\n      height: \"70%\",\n      padding: \"0\",\n      margin: \"0\",\n      border: \"2px solid\"\n    },\n    textField: {\n      width: \"100%\",\n      maxWidth: 404,\n      height: \"25%\",\n      padding: \"0\",\n      marginTop: \"10px\"\n    },\n    users: {\n      height: \"5%\",\n      padding: \"0px\",\n      margin: \"0px\"\n    }\n  };\n};\n\nvar ChatRoom =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatRoom, _Component);\n\n  function ChatRoom() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatRoom);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatRoom)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      chatHistory: [],\n      input: \"\",\n      userName: \"\",\n      users: [],\n      avatar: faker.internet.avatar()\n    };\n    _this.panel = React.createRef();\n\n    _this.handleMessage = function (entry) {\n      _this.setState({\n        chatHistory: _this.state.chatHistory.concat(entry)\n      });\n    };\n\n    _this.handleUsers = function (entry) {\n      _this.setState({\n        users: entry\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onSendMessage = function () {\n      if (!_this.state.input) {\n        return;\n      }\n\n      _this.props.sendMessage({\n        message: _this.state.input,\n        avatar: _this.state.avatar\n      });\n\n      _this.addChatMessage({\n        username: _this.state.userName,\n        message: _this.state.input,\n        avatar: _this.state.avatar\n      });\n\n      _this.setState({\n        input: \"\"\n      });\n    };\n\n    _this.addChatMessage = function (entry) {\n      _this.setState({\n        chatHistory: _this.state.chatHistory.concat(entry)\n      });\n    };\n\n    _this.setUserName = function (userName) {\n      _this.setState({\n        userName: userName\n      });\n    };\n\n    _this.scrollChatToBottom = function () {\n      var panel = document.getElementById(\"scroll\");\n      panel.scrollTop = panel.scrollHeight;\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatRoom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.messageEvent(this.handleMessage);\n      this.props.userCount(this.handleUsers);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollChatToBottom();\n    }\n  }, {\n    key: \"renderedList\",\n    value: function renderedList() {\n      var i = 0;\n      return this.state.chatHistory.map(function (entry) {\n        i++;\n        return React.createElement(ChatItem, {\n          key: i,\n          entry: entry,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"renderedChatBox\",\n    value: function renderedChatBox() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(TextField, {\n        className: classes.textField,\n        autoComplete: \"off\",\n        label: \"Type a message\",\n        multiline: true,\n        rows: \"4\",\n        variant: \"outlined\",\n        onChange: this.onInputChange,\n        value: this.state.input,\n        onKeyPress: function onKeyPress(e) {\n          return e.key === \"Enter\" ? (e.preventDefault(), _this2.onSendMessage()) : null;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          addUser = _this$props.addUser;\n      return React.createElement(\"div\", {\n        className: classes.div_center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(List, {\n        id: \"scroll\",\n        className: classes.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.renderedList()), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.renderedChatBox()), React.createElement(\"div\", {\n        className: classes.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(UsersPopper, {\n        users: this.state.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(NameModal, {\n        addUser: addUser,\n        setUser: this.setUserName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ChatRoom;\n}(Component);\n\nexport default withStyles(styles)(ChatRoom);","map":{"version":3,"sources":["/home/jambis/Documents/Personal Projects/react-socket-chat/client/src/components/ChatRoom.js"],"names":["React","Component","List","TextField","withStyles","ChatItem","NameModal","UsersPopper","faker","styles","div_center","margin","marginRight","marginLeft","width","height","minHeight","backgroundColor","list","maxWidth","position","overflow","padding","border","textField","marginTop","users","ChatRoom","state","chatHistory","input","userName","avatar","internet","panel","createRef","handleMessage","entry","setState","concat","handleUsers","onInputChange","event","target","value","onSendMessage","props","sendMessage","message","addChatMessage","username","setUserName","scrollChatToBottom","document","getElementById","scrollTop","scrollHeight","messageEvent","userCount","i","map","classes","e","key","preventDefault","addUser","renderedList","renderedChatBox"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ChatItem from \"./ChatItem\";\nimport NameModal from \"./NameModal\";\nimport UsersPopper from \"./UsersPopper\";\nimport faker from \"faker\";\n\nconst styles = () => ({\n  div_center: {\n    margin: \"0px\",\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    width: \"404px\",\n    height: \"100%\",\n    minHeight: \"100%\",\n    backgroundColor: \"red\"\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 400,\n    backgroundColor: \"grey\",\n    position: \"relative\",\n    overflow: \"auto\",\n    height: \"70%\",\n    padding: \"0\",\n    margin: \"0\",\n    border: \"2px solid\"\n  },\n  textField: {\n    width: \"100%\",\n    maxWidth: 404,\n    height: \"25%\",\n    padding: \"0\",\n    marginTop: \"10px\"\n  },\n  users: {\n    height: \"5%\",\n    padding: \"0px\",\n    margin: \"0px\"\n  }\n});\n\nclass ChatRoom extends Component {\n  state = {\n    chatHistory: [],\n    input: \"\",\n    userName: \"\",\n    users: [],\n    avatar: faker.internet.avatar()\n  };\n\n  panel = React.createRef();\n\n  componentDidMount() {\n    this.props.messageEvent(this.handleMessage);\n    this.props.userCount(this.handleUsers);\n  }\n  componentDidUpdate() {\n    this.scrollChatToBottom();\n  }\n\n  handleMessage = entry => {\n    this.setState({ chatHistory: this.state.chatHistory.concat(entry) });\n  };\n\n  handleUsers = entry => {\n    this.setState({ users: entry });\n  };\n\n  onInputChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  onSendMessage = () => {\n    if (!this.state.input) {\n      return;\n    }\n\n    this.props.sendMessage({\n      message: this.state.input,\n      avatar: this.state.avatar\n    });\n    this.addChatMessage({\n      username: this.state.userName,\n      message: this.state.input,\n      avatar: this.state.avatar\n    });\n    this.setState({ input: \"\" });\n  };\n\n  addChatMessage = entry => {\n    this.setState({\n      chatHistory: this.state.chatHistory.concat(entry)\n    });\n  };\n\n  setUserName = userName => {\n    this.setState({ userName });\n  };\n\n  scrollChatToBottom = () => {\n    const panel = document.getElementById(\"scroll\");\n\n    panel.scrollTop = panel.scrollHeight;\n  };\n\n  renderedList() {\n    let i = 0;\n    return this.state.chatHistory.map(entry => {\n      i++;\n      return <ChatItem key={i} entry={entry} />;\n    });\n  }\n\n  renderedChatBox() {\n    const { classes } = this.props;\n\n    return (\n      <TextField\n        className={classes.textField}\n        autoComplete=\"off\"\n        label=\"Type a message\"\n        multiline\n        rows=\"4\"\n        variant=\"outlined\"\n        onChange={this.onInputChange}\n        value={this.state.input}\n        onKeyPress={e =>\n          e.key === \"Enter\" ? (e.preventDefault(), this.onSendMessage()) : null\n        }\n      />\n    );\n  }\n\n  render() {\n    const { classes, addUser } = this.props;\n\n    return (\n      <div className={classes.div_center}>\n        <List id=\"scroll\" className={classes.list}>\n          {this.renderedList()}\n        </List>\n        <form>{this.renderedChatBox()}</form>\n        <div className={classes.users}>\n          <UsersPopper users={this.state.users} />\n          <NameModal addUser={addUser} setUser={this.setUserName} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ChatRoom);\n"]},"metadata":{},"sourceType":"module"}