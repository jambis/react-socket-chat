{"ast":null,"code":"import _classCallCheck from \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jambis/Documents/Personal Projects/react-socket-chat/client/src/components/ChatRoom.js\";\nimport React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Popover from \"@material-ui/core/Popover\";\nimport People from \"@material-ui/icons/People\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ChatItem from \"./ChatItem\";\nimport NameModal from \"./NameModal\";\n\nvar styles = function styles(theme) {\n  return {\n    list: {\n      width: \"100%\",\n      maxWidth: 400,\n      backgroundColor: \"grey\",\n      position: \"relative\",\n      overflow: \"auto\",\n      height: \"600px\",\n      maxHeight: 600,\n      border: \"2px solid\"\n    },\n    textField: {\n      width: \"100%\",\n      maxWidth: 400\n    }\n  };\n};\n\nvar ChatRoom =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatRoom, _Component);\n\n  function ChatRoom() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatRoom);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatRoom)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      chatHistory: [],\n      input: \"\",\n      userName: \"\",\n      users: []\n    };\n    _this.panel = React.createRef();\n\n    _this.handleMessage = function (entry) {\n      _this.setState({\n        chatHistory: _this.state.chatHistory.concat(entry)\n      });\n    };\n\n    _this.handleUsers = function (entry) {\n      _this.setState({\n        users: entry\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onSendMessage = function () {\n      if (!_this.state.input) {\n        return;\n      }\n\n      _this.props.sendMessage(_this.state.input);\n\n      _this.addChatMessage({\n        username: _this.state.userName,\n        message: _this.state.input\n      });\n\n      _this.setState({\n        input: \"\"\n      });\n    };\n\n    _this.addChatMessage = function (entry) {\n      _this.setState({\n        chatHistory: _this.state.chatHistory.concat(entry)\n      });\n    };\n\n    _this.setUserName = function (userName) {\n      _this.setState({\n        userName: userName\n      });\n    };\n\n    _this.scrollChatToBottom = function () {\n      var panel = document.getElementById(\"scroll\");\n      panel.scrollTop = panel.scrollHeight;\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatRoom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.messageEvent(this.handleMessage);\n      this.props.userCount(this.handleUsers);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollChatToBottom();\n    }\n  }, {\n    key: \"renderedList\",\n    value: function renderedList() {\n      var i = 0;\n      return this.state.chatHistory.map(function (entry) {\n        i++;\n        return React.createElement(ChatItem, {\n          key: i,\n          entry: entry,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"renderedChatBox\",\n    value: function renderedChatBox() {\n      var _this2 = this;\n\n      return React.createElement(TextField, {\n        className: this.props.classes.textField,\n        id: \"outlined-multiline-static\",\n        label: \"Type a message\",\n        multiline: true,\n        rows: \"4\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.onInputChange,\n        value: this.state.input,\n        onKeyPress: function onKeyPress(e) {\n          return e.key === \"Enter\" ? (e.preventDefault(), _this2.onSendMessage()) : null;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(List, {\n        id: \"scroll\",\n        className: this.props.classes.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.renderedList()), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.renderedChatBox()), React.createElement(\"span\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.users.length, React.createElement(People, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(NameModal, {\n        addUser: this.props.addUser,\n        setUser: this.setUserName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatRoom;\n}(Component);\n\nexport default withStyles(styles)(ChatRoom);","map":{"version":3,"sources":["/home/jambis/Documents/Personal Projects/react-socket-chat/client/src/components/ChatRoom.js"],"names":["React","Component","List","TextField","Popover","People","withStyles","ChatItem","NameModal","styles","theme","list","width","maxWidth","backgroundColor","position","overflow","height","maxHeight","border","textField","ChatRoom","state","chatHistory","input","userName","users","panel","createRef","handleMessage","entry","setState","concat","handleUsers","onInputChange","event","target","value","onSendMessage","props","sendMessage","addChatMessage","username","message","setUserName","scrollChatToBottom","document","getElementById","scrollTop","scrollHeight","messageEvent","userCount","i","map","classes","e","key","preventDefault","renderedList","renderedChatBox","cursor","length","addUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Popover from \"@material-ui/core/Popover\";\nimport People from \"@material-ui/icons/People\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ChatItem from \"./ChatItem\";\nimport NameModal from \"./NameModal\";\n\nconst styles = theme => ({\n  list: {\n    width: \"100%\",\n    maxWidth: 400,\n    backgroundColor: \"grey\",\n    position: \"relative\",\n    overflow: \"auto\",\n    height: \"600px\",\n    maxHeight: 600,\n    border: \"2px solid\"\n  },\n  textField: {\n    width: \"100%\",\n    maxWidth: 400\n  }\n});\n\nclass ChatRoom extends Component {\n  state = { chatHistory: [], input: \"\", userName: \"\", users: [] };\n  panel = React.createRef();\n\n  componentDidMount() {\n    this.props.messageEvent(this.handleMessage);\n    this.props.userCount(this.handleUsers);\n  }\n  componentDidUpdate() {\n    this.scrollChatToBottom();\n  }\n\n  handleMessage = entry => {\n    this.setState({ chatHistory: this.state.chatHistory.concat(entry) });\n  };\n\n  handleUsers = entry => {\n    this.setState({ users: entry });\n  };\n\n  onInputChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  onSendMessage = () => {\n    if (!this.state.input) {\n      return;\n    }\n\n    this.props.sendMessage(this.state.input);\n    this.addChatMessage({\n      username: this.state.userName,\n      message: this.state.input\n    });\n    this.setState({ input: \"\" });\n  };\n\n  addChatMessage = entry => {\n    this.setState({\n      chatHistory: this.state.chatHistory.concat(entry)\n    });\n  };\n\n  setUserName = userName => {\n    this.setState({ userName });\n  };\n\n  scrollChatToBottom = () => {\n    const panel = document.getElementById(\"scroll\");\n\n    panel.scrollTop = panel.scrollHeight;\n  };\n\n  renderedList() {\n    let i = 0;\n    return this.state.chatHistory.map(entry => {\n      i++;\n      return <ChatItem key={i} entry={entry} />;\n    });\n  }\n\n  renderedChatBox() {\n    return (\n      <TextField\n        className={this.props.classes.textField}\n        id=\"outlined-multiline-static\"\n        label=\"Type a message\"\n        multiline\n        rows=\"4\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        onChange={this.onInputChange}\n        value={this.state.input}\n        onKeyPress={e =>\n          e.key === \"Enter\" ? (e.preventDefault(), this.onSendMessage()) : null\n        }\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <List id=\"scroll\" className={this.props.classes.list}>\n          {this.renderedList()}\n        </List>\n        <form>{this.renderedChatBox()}</form>\n        <span style={{ cursor: \"pointer\" }}>\n          {this.state.users.length}\n          <People />\n        </span>\n        <NameModal addUser={this.props.addUser} setUser={this.setUserName} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ChatRoom);\n"]},"metadata":{},"sourceType":"module"}