{"ast":null,"code":"var io = require(\"socket.io-client\");\n\nexport default function () {\n  if (process.env.PORT) {\n    var _socket = io.connect();\n  } else {\n    var _socket2 = io.connect(\"http://localhost:3001\");\n  }\n\n  function message(data) {\n    socket.emit(\"message\", data);\n  }\n\n  function messageEvent(handleMessage) {\n    socket.on(\"message\", handleMessage);\n  }\n\n  function userCount(handleUsers) {\n    socket.on(\"users\", handleUsers);\n  }\n\n  function addUser(data) {\n    socket.emit(\"add user\", data);\n  }\n\n  return {\n    message: message,\n    messageEvent: messageEvent,\n    userCount: userCount,\n    addUser: addUser\n  };\n}","map":{"version":3,"sources":["/home/jambis/Documents/Personal Projects/react-socket-chat/client/src/socket.js"],"names":["io","require","process","env","PORT","socket","connect","message","data","emit","messageEvent","handleMessage","on","userCount","handleUsers","addUser"],"mappings":"AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AAEA,eAAe,YAAW;AACxB,MAAIC,OAAO,CAACC,GAAR,CAAYC,IAAhB,EAAsB;AACpB,QAAMC,OAAM,GAAGL,EAAE,CAACM,OAAH,EAAf;AACD,GAFD,MAEO;AACL,QAAMD,QAAM,GAAGL,EAAE,CAACM,OAAH,CAAW,uBAAX,CAAf;AACD;;AAED,WAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrBH,IAAAA,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAuBD,IAAvB;AACD;;AAED,WAASE,YAAT,CAAsBC,aAAtB,EAAqC;AACnCN,IAAAA,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqBD,aAArB;AACD;;AAED,WAASE,SAAT,CAAmBC,WAAnB,EAAgC;AAC9BT,IAAAA,MAAM,CAACO,EAAP,CAAU,OAAV,EAAmBE,WAAnB;AACD;;AAED,WAASC,OAAT,CAAiBP,IAAjB,EAAuB;AACrBH,IAAAA,MAAM,CAACI,IAAP,CAAY,UAAZ,EAAwBD,IAAxB;AACD;;AAED,SAAO;AACLD,IAAAA,OAAO,EAAPA,OADK;AAELG,IAAAA,YAAY,EAAZA,YAFK;AAGLG,IAAAA,SAAS,EAATA,SAHK;AAILE,IAAAA,OAAO,EAAPA;AAJK,GAAP;AAMD","sourcesContent":["const io = require(\"socket.io-client\");\n\nexport default function() {\n  if (process.env.PORT) {\n    const socket = io.connect();\n  } else {\n    const socket = io.connect(\"http://localhost:3001\");\n  }\n\n  function message(data) {\n    socket.emit(\"message\", data);\n  }\n\n  function messageEvent(handleMessage) {\n    socket.on(\"message\", handleMessage);\n  }\n\n  function userCount(handleUsers) {\n    socket.on(\"users\", handleUsers);\n  }\n\n  function addUser(data) {\n    socket.emit(\"add user\", data);\n  }\n\n  return {\n    message,\n    messageEvent,\n    userCount,\n    addUser\n  };\n}\n"]},"metadata":{},"sourceType":"module"}